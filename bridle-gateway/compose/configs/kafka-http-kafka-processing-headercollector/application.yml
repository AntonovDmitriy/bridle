spring:
  output:
    ansi:
      enabled: always
camel:
  component:
    kafka:
      enabled: false
    http:
      enabled: false
    servlet:
      enabled: false
    rest:
      enabled: false
    freemarker:
      enabled: false
    json-validator:
      enabled: false

management:
  endpoints:
    web:
      exposure:
        include: "health,info,prometheus"

gateway:
  type: "kafka-http-kafka"
redelivery-policy:
  maximum-redeliveries: 2
  redelivery-delay: 100
  retry-attempted-log-level: "WARN"
error-handler:
  redelivery-policy-ref: "redelivery-policy"
processing:
  after-consumer:
    convert-body:
      type-class: "java.lang.String"
      charset: "UTF-8"
    validation:
      format: "json-schema"
      resource-uri: "file:/app/config/test.schema.json"
    header-collector:
      expression-format: "JSON_PATH"
      query-expressions-by-header-name:
        systemName: "$.system.name"
        systemStream: "$.system.stream"
        companyName: "$.company.name"
        companyFounded: "$.company.founded"
        locationCount: "$.company.locations.length()"
        executiveCount: "$.company.executives.length()"
        products: "$.company.products[*]"
    transform:
      resource-uri: "file://app/config/transform-with-headers.tmpl"
  after-producer:
    convert-body:
      type-class: "java.lang.String"
      charset: "UTF-8"
    validation:
      format: "json-schema"
      resource-uri: "file:/app/config/response.schema.json"
    header-collector:
      expression-format: "JSON_PATH"
      query-expressions-by-header-name:
        personName: "$.person.name"
        personAge: "$.person.age"
        personAddressCity: "$.person.address.city"
        personAddressStreet: "$.person.address.street"
        personAddressBuilding: "$.person.address.building"
        hobbies: "$.person.hobbies[*]"
    transform:
      resource-uri: "file://app/config/response-transform-with-headers.tmpl"
kafka-in:
  brokers: "kafka:9092"
  topic: "routetest_request"
  consumers-count: 3
  group-id: "KAFKA_HTTP_KAFKA_FIRST_TESTING6"
  break-on-error: false
  auto-offset-reset: "earliest"
  max-poll-records: 500
  max-partition-fetch-bytes: 1048576
  heartbeat-interval-ms: 3000
  session-timeout-ms: 10000
rest-call:
  host: "nginx-call"
  resource-path: "person"
  port: "80"
  endpoint-properties:
    httpMethod: "POST"
kafka-out:
  brokers: "kafka:9092"
  topic: "routetest_response"
