spring:
  output:
    ansi:
      enabled: always
camel:
  component:
    kafka:
      enabled: false
    http:
      enabled: false
    scheduler:
      enabled: false
    rest:
      enabled: false
    freemarker:
      enabled: false
    json-validator:
      enabled: false

management:
  endpoints:
    web:
      exposure:
        include: "health,info,prometheus"

gateway:
  type: "kafka-sql"
redelivery-policy:
  maximum-redeliveries: 2
  redelivery-delay: 100
  retry-attempted-log-level: "WARN"
error-handler:
  redelivery-policy-ref: "redelivery-policy"

components:
  kafka:
    kafka-in:
      brokers: "localhost:9090"
      consumers-count: 1
      group-id: "KAFKA_HTTP_KAFKA_FIRST_TESTING6"
      break-on-error: false
      auto-offset-reset: "earliest"
      max-poll-records: 500
      max-partition-fetch-bytes: 1048576
      heartbeat-interval-ms: 3000
      session-timeout-ms: 10000
  sql:
    main-jdbc-call:
      dataSource: "#mainDataSource"
endpoints:
  kafka-in-endpoint:
    component-name: "kafka-in"
    consumer: true
    mandatory:
      topic: "routetest"
  sql-out-endpoint:
    component-name: "main-jdbc-call"
    mandatory:
      sql-template-uri: "classpath:/routetest/kafka-sql/integration-mapping.sql"
processing:
  after-consumer:
    convert-body:
      type-class: "java.lang.String"
      charset: "UTF-8"
    validation:
      format: "json-schema"
      resource-uri: "/routetest/kafka-sql/test-message.schema.json"
    unmarshalling-data-format":
      data-format-name: "json"
datasources:
  hikari:
    main-datasource:
      driver-class-name: "oracle.jdbc.OracleDriver"
      jdbc-url: "jdbc:oracle:thin:@localhost:1521:xe"
      username: "testUser"
      password: "testPassword"
      maximum-pool-size: 10
      connection-timeout: 30000
      idle-timeout: 60000
      max-life-time: 1800000
